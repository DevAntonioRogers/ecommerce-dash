datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String    @unique
  username       String
  hashedPassword String
  image          String?   @default("no-image")
  isApproved     Boolean   @default(false)
  isAdmin        Boolean   @default(false)
  location       String    @default("no-location")
  accounts       Account[]
  sessions       Session[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Product {
  id      String  @id @default(cuid())
  name    String
  price   Float
  image   String?
  revenue Int
}

model Orders {
  id           String   @id @default(cuid())
  customerName String
  address      String
  totalAmount  Int
  orderNumber  Int
  date         DateTime @default(now())
}

model Customers {
  id     String @id @default(cuid())
  name   String
  orders Int
  image  String
}
